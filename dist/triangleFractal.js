(()=>{"use strict";var i=function(i){var n=this;this.fill=function(i,t,e){t||(t=i),e||(e=i),n.cg.fillStyle="rgb("+i+","+t+","+e+")"},this.background=function(i,t,e){var o=n.cg.fillStyle;n.fill(i,t,e),n.cg.fillRect(0,0,n.width,n.height),n.cg.fillStyle=o},this.rect=function(i,t,e,o){n.cg.fillRect(i,t,e,o)},this.pixel=function(i,t,e){void 0===e&&(e=n.pixelScale),n.cg.fillRect(i,t,e,e)},this.canvas=document.getElementById(i),this.cg=this.canvas.getContext("2d"),this.width=window.innerWidth<window.innerHeight?window.innerWidth:window.innerHeight,this.height=window.innerWidth<window.innerHeight?window.innerWidth:window.innerHeight,this.canvas.width=this.width,this.canvas.height=this.height,this.pixelScale=1};window.onload=function(){var n,t=new i("c"),e=function(){n=Date.now(),n,function(i,n){!function(i){void 0===i&&(i=!1);var n=document.getElementById("slider"),t=document.getElementById("sliderval"),e=parseInt(n.value);t.innerText=(e/10).toString(),i&&console.log(e)}(),function(i){void 0===i&&(i=!1);var n=document.getElementById("slider2"),t=document.getElementById("sliderval2"),e=parseInt(n.value);t.innerText=e.toString(),i&&console.log(e)}(),function(i){i.background(255),i.fill(0),i.cg.strokeStyle="rgb(255, 255, 255)",i.cg.beginPath(),i.cg.moveTo(i.width/2,0),i.cg.lineTo(i.width,i.height),i.cg.lineTo(0,i.height),i.cg.lineTo(i.width/2,0),i.cg.fill(),i.fill(255);var n=function(t,e,o,l,c){if(!(c>=8)){var g=(t+o)/2,h=(3*t+o)/4,d=(e+l)/2,r=g-t+h;!function(n,t,e,o,l,c){i.cg.beginPath(),i.cg.moveTo(n,t),i.cg.lineTo(e,o),i.cg.lineTo(l,c),i.cg.lineTo(n,t),i.cg.fill()}(g,l,h,d,r,d);var a=t,w=d,s=g,f=l,u=g,v=d,m=o,T=l;n(h,e,r,d,c+1),n(a,w,s,f,c+1),n(u,v,m,T,c+1)}};n(0,0,i.width,i.height,0)}(i)}(t),window.requestAnimationFrame(e)};Date.now(),window.requestAnimationFrame(e)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,